/*
 * Frangipani config page Javascript.
 * @author Ron Ammar
 */

/* Wrap all code in an immediately-invoked function expressions to avoid 
 * global variables. */
(function() {

/* 
 * Auxiliary helper functions and constants.
 */
var aux= {

	/* Default constants. */
	INSTITUTION: "The Hospital for Sick Children",
	MAX_RECORDS: 500,
	ANNOVAR_ANNOTATIONS: [
		"snp138",
		"1000g2014sep",
		"esp6500_all",
		"cg69",
		"clinvar_20140929",
		"ljb26_all"
	],
	FOOTER: "Report generated by Frangipani.",
	DISCLAIMER_PREFIX: 'This data is provided "as is", "where is" and without any express or implied warranties, including, but not limited to, any implied warranties of merchantability and/or fitness for a particular purpose. In no event shall ',
	DISCLAIMER_SUFFIX: ', nor its agents, employers or representatives be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way or form out of the use of this data, even if advised of the possibility of such damage. All users assume the risk and responsibility for the accuracy, completeness or usefulness, or lack thereof, of any information, apparatus, product or process disclosed or that the use hereof would or would not infringe the rights of any other party.',
	DISCLAIMER: undefined,

	/* Cache of handlebars templates. */
	template_cache: undefined,

	/* Function to retrieve and render a handlebars template. This function is
	 * an async version of that provided by user koorchik on StackOverFlow:
	 * http://stackoverflow.com/questions/8366733/external-template-in-underscore
	 * as explained on the following blog entry:
	 * http://javascriptissexy.com/handlebars-js-tutorial-learn-everything-about-handlebars-js-javascript-templating/
	 *
	 * NOTE: In the future, I would compile all my templates into a single
	 * templates.js file and load that in the beginning rather than have many
	 * small asynchronous AJAX calls to get templates when the webpage loads.
	 *
	 * Returns a promise. */
	asyncRenderHbs: function(template_name, template_data) {
		if (!aux.template_cache) { 
		    aux.template_cache= {};
		}

		var promise= undefined;

		if (!aux.template_cache[template_name]) {
			promise= new Promise(function(resolve, reject) {
				var template_url= '/templates/' + template_name;
				$.ajax({
					url: template_url,
					method: 'GET',
					success: function(data) {
						aux.template_cache[template_name]= Handlebars.compile(data);
						resolve(aux.template_cache[template_name](template_data));
					},
					error: function(err, message) {
						reject(err);
					}			
				});
			});
		} else {
			promise= Promise.resolve(aux.template_cache[template_name](template_data));
		}
		
		return promise;
	},


	/* Refresh all relevant event handlers and Foundation javascript. */
	refresh: function() {
		$(document).foundation();
	},

	/* Update the Disclaimer using the current institution name. */
	updateDisclaimer: function() {
		aux.DISCLAIMER= aux.DISCLAIMER_PREFIX + aux.INSTITUTION + aux.DISCLAIMER_SUFFIX;
	}

};


/* 
 * Set up a ready handler, a function to run when the DOM is ready
 */
var handler= function() {

	/* Set the defaults: */

	// Customize the disclaimer for the institute, using a default first
	aux.updateDisclaimer();
	$("#frangipani-disclaimer").val(aux.DISCLAIMER);
	$("#frangipani-institution").attr("placeholder", "e.g. " + aux.INSTITUTION);
	$("#frangipani-institution").on("keyup", function(event) {
		console.log("typed!!!");
		aux.INSTITUTION= $(this).val();
		aux.updateDisclaimer();
		$("#frangipani-disclaimer").val(aux.DISCLAIMER);
	});

	// Set the maximum number of records.
	$("#frangipani-max-records-slider").foundation("slider", "set_value", aux.MAX_RECORDS);

	// Set default footer
	$("#frangipani-footer").val(aux.FOOTER);



	/* Create switches for each annovar annotation. */
	var context= {
		"annotations": aux.ANNOVAR_ANNOTATIONS
	};

	aux.asyncRenderHbs("frangipani-config-annovar-annotation.hbs", context)
		.then(function(html) {
			// append to DOM
			$("#frangipani-annovar-options").append(html);
		});

	/*
	var promise= Promise.resolve($.ajax({
			url: "/callsets/search",
			type: "POST",
			contentType: "application/json",
			dataType: "json",
			data: JSON.stringify({
				"variantSetIds": settings.currentData.variantSetIds,
				"pageSize": 30,
				"pageToken": settings.currentData.pageToken
			})
		}));

		promise.then(function(result) {
			settings.currentData['pageToken'] = result['nextPageToken'];
			var context= {
				"callSets": result["callSets"],
				"projectName": settings.currentData.projectName,
			}
	*/

};


/* 
 * Wait for the DOM to load before any processing.
 */
$(document).ready(handler);

})();





