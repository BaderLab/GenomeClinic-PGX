/*
 * Defines the routes for the Server.
 * @author Ron Ammar
 */

var express= require("express");
var ga4ghRequests= require("./ga4gh-requests");
var bodyParser= require("body-parser");
var uploader= require("jquery-file-upload-middleware");
var fs=require('fs');
var dbConstant= require("./mongodb_constants");
var annotateFile = require('../scripts/annotateAndAddVariants'); 



var getRouter= express.Router();
getRouter.use(function(request, response) {
	var promise;

	if (request.baseUrl == "/datasets") {
		promise= ga4ghRequests.getProjects();
	}

	promise.then(function(result) {
		// Currently, I'm not paying attention to the next page token because
		// it doesn't always appear. If it ever does, write an error to console
		// so that it is brought to my attention.
		if (result.nextPageToken !== undefined) {
			console.log("ERROR: nextPageToken found, not managed.");
		}

		response.send(result);
	}, function(err) {
		console.log(err);
	});
});

var postRouter= express.Router();
postRouter.use(bodyParser.json());
postRouter.use(function(request, response) {
	var promise;

	if (request.baseUrl == "/callsets/search") {
		promise= ga4ghRequests.getPatients(request.body);
	} else if (request.baseUrl == "/variants/search") {
		promise = ga4ghRequests.getVariants(request.body);
	}
	promise.then(function(result) {
		response.send(result);
	}, function(err) {
		console.log(err);
	});
});



uploader.configure({
	tmpDir:"tmp",
	uploadDir:"upload/vcf",
	uploadUrl:'/upload/vcf'
});


uploader.on("end",function(filInfo,req,res){
	console.log(req.body);

});

var uploadRouter = express.Router();
uploadRouter.use(uploader.fileHandler());


var getPatients = express.Router();
getPatients.use(bodyParser.json());
getPatients.use(function(request,response){
	var promise;
	if (request.baseUrl == "/database/getPatients"){
		promise = dbFunctions.findAllPatients();
	}
	promise.then(function(result){
		response.send(result)
	}).catch(function(err){
		console.log(err.toString())
	});

});

var addPatient = express.Router();
addPatient.use(bodyParser.json());
addPatient.use(function(request,response){
	var promise;
	var patientOptions = {};

	patientOptions = request.body;

	if(request.baseUrl == "/database/addPatient"){
		promise = dbFunctions.addPatient(patientOptions);
	}

	promise.then(function(result){
		response.send(result)
	}).catch(function(err){
		response.send(err)
	});

})

exports.getRouter= getRouter;
exports.postRouter= postRouter;
exports.uploadRouter = uploadRouter;
exports.getPatients = getPatients;
exports.addPatient = addPatient;
//exports.variantRouter = variantRouter;



