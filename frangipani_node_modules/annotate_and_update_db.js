var child_process=require('child_process');
var mongo = require("../node_modules/mongodb"); // this script must be run from the main fragnipani page
var fs = require('fs');

/* This script will annotate and add a specified vcf file to a speceific mongodb. 
 * It requires several input from the user prior to user
*/

var usage = "node annotate_and_update_db.js [ annovarPath ] [ inputFile ] [ outputFile ] [ tableName ]";

var args = process.argV.slice(2);

if (args.length != 4)
	console.log(usage);
	process.exit(1);

var annovarPath = args[0];
var inputFile = args[1];
var outputFile = args[2];
var tableName = args[3];


fs.exists(inputFile,function(exists){
	if !(exists){
		console.log("Input File Does not Exist");
		process.exit(1)
	}
})
fs.existsSync(annovarPath,function(exists){
	if !(exists){
		console.log("AnnovarPath does Not Exist, please specify the correct path");
		process.exit(1);
	}
});

var annovarCmd = 'perl ' + annovarPath + '/table_annovar.pl' +  
	inputFile + ' ' + annovarPath + '/humandb/ -buildver hg19 -out'
	+ outFile + ' -operation g,f,f,f,f,f,f,f,f,f,f -nastring . -vcfinput ' + 
	'-protocol refgene,esp6500_all,ljb26_all,clinvar_20140929,cg69,1000g2014sep_amr,1000g2014sep_eas,1000g2014sep_afr,1000g2014sep_eur,1000g2014sep_sas,1000g2014sep_all' 

console.log("Annotating File...");

child_process.exec(annovarCmd, function(err,stdout,stderr){
	if (err){
		console.log(err);
		process.exit(1);
	} else if (stderr) {
		console.log(err);
		process.exit(1);
	}
});

console.log("Annotation complete")''
outputFile += '.hg19_multianno.txt';

fs.exists(outputFile,function(exists){
	if !(exists){
		console.log("Error in creating Annotated Files");
		process.exit(1);
	}
});

var parserCmd = 'python ./parser.py ' + outputFile

child_process.exec(parserCmd, function(err,stdout,stderr){
	if (err){
		console.log(err);
		process.exit(1);
	} else if (stderr) {
		console.log(err);
		process.exit(1);
	}
});

fs.exsits('./parsed_table.js',function(exists){
	if !(exists){
		console.log("Error in creating .js file from vcf input");
		process.exit(1);
	}
}


var entries = require('./parsed_table');

if !(entries){
	console.log("did not load parsed_table.js correctly");
	process.exit(1);
}

var db;
mongo.MongoClient.connect('mongodb://localhost:27017/patientDB',function(err,db){
	if (err){
		console.log(err);
		process.exit(1);
	} else {
		db.createCollection(tableName,{strict:true},function(err,collection){
			if (err){
				console.log("Collection " + tableName + " already exists. please choose another name");
				process.exit(1);
			} else {
				console.log("Adding entries to db...");
				for (var i = 0; i < entries.length; i++){
					collection.insert(entries[i],function(err,d){
						if (err)
							console.log(err)

					});
				console.log("Finished adding entries to db")
				}
			}
		}
		

	}
});







