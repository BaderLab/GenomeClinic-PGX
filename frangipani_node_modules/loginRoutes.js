var bodyParser= require("body-parser");
var urlencodedParser = bodyParser.urlencoded({extended:false});
var nodemailer = require('nodemailer');

var transporter = nodemailer.createTransport({
	service:'gmail',
	auth:{
		user:'patrickmageee@gmail.com', // this must be set up a new each time.
		pass:'Aessedai12'
	}
});


module.exports = function(app,passport,dbFunctions){

	//==================================================================
	//LOGIN Request
	//==================================================================
	app.get('/login',function(req,res){
		res.sendFile('foundation-5.4.6/frangipani-login.html',{root:'.'})
	})

	app.post('/login',urlencodedParser,passport.authenticate('local-login',{
		successRedirect:'/success',
		failureRedirect:'/failure',
		failureFlash:true
	}));
		
	//==================================================================
	//SIGNUP Request
	//==================================================================
	app.get('/signup',function(req,res){
		res.sendFile('foundation-5.4.6/frangipani-signup.html',{root:'.'})
	});

	//parse signup information
	app.post('/signup',urlencodedParser,passport.authenticate('local-signup',{
		successRedirect:'/success',
		failureRedirect:'/failure',
		failureFlash:true
	}));

	app.get('/recover', function(req,res){
		if (req.isAuthenticated())
			res.redirect('/');
		
		res.sendFile('foundation-5.4.6/frangipani-recover.html',{root:'.'});
	});

	app.post('/recover',function(req,res){
		var body = req.body;
		//check if user is valid
		dbFunctions.findUserById(body.username)
		.then(function(user){
			if (user){
				dbFunctions.generatePassword(body.username)
				.then(function(result){
					console.log(body.username);
					var mailOptions = {
						from:'patrickmageee@gmail.com',
						to:body.username,
						subject:'password reset',
						html:'<h4>Password Reset<h4>'
						+ '<p>Your temporary password is:  ' + result + "</p>"
						+ '<p>Please login and change your password</p><br>'
						+ '<p><b>Do not reply to this email</b></p>'
					}
					transporter.sendMail(mailOptions,function(err,info){
						if (err){
							console.log(err);
						}else {
							req.flash('statusCode','200');
							res.redirect('/success');
						}
					})

					
				})

			} else {
				req.flash('error','Oops, No user was found!');
				req.flash('statusCode','404');
				res.redirect('/failure')
			}
		})

	})

	//route to send information in the event of a login failure
	app.get('/failure',function(req,res){
		var response ={status:'failed',error:req.flash('error'),redirectURL:undefined,statusCode:req.flash('statusCode')}
		res.send(JSON.stringify(response))
	});

	//route to send information in the event of a login success
	app.get('/success',function(req,res){
		var response = {status:'ok',error:undefined,redirectURL:'/',statusCode:req.flash('statusCode')}
		res.send(JSON.stringify(response))
	})
	//==================================================================
	//LOGIN WITH GOOGLE Request
	//==================================================================
	app.get('/auth/google', passport.authenticate('google', { scope : ['profile', 'email'] }));


	//==================================================================
	//RESPONSE FROM GOOGLE Request
	//==================================================================
    app.get('/auth/google/callback',
        passport.authenticate('google', {
            successRedirect : '/',
            failureRedirect : '/login'
       	})
    );

	//==================================================================
	//Logout
	//==================================================================
	app.get('/logout', function(req,res){
		req.logout()
		res.redirect('/')
	})

}