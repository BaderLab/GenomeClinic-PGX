//que and run
var Promise = require('bluebird');
var nodeConstant= require("./node_constants"); 
var annotateFile = require('../scripts/annotateAndAddVariants');
var fs = require('fs');




function queue(){
}


//variables
queue.prototype.isRunning = false;
queue.prototype.queue = [];

//functions
queue.prototype.addToQueue = function(fileParams, patientFields){
	var inputObj = {
		fileInfo: fileParams,
		fields: patientFields
	};

	this.queue.push(inputObj);
};
queue.prototype.removeFirst = function(){
	this.queue.shift();
}
queue.prototype.first = function(){
	var outObj = this.queue[0];
	return outObj;
}


queue.prototype.run = function(){
	self = this;

	if (!self.isRunning)
		self.isRunning = true;
	var promise = Promise.resolve();
	promise.then(function(){
		var params = self.first();
		var fileInfo = params.fileInfo;
		var fields = params.fields;

		
		return annotateFile

		// do somehting here;


	})

	promise.then(function(){
		if (self.queue.length > 0){
			return self.run();
		} else {
			self.isRunning = false;
		}
	}).catch();

	return promise;
}

